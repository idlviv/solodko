{"version":3,"sources":["D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs-routing.module.ts","D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.component.html","D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.component.scss","D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.component.ts","D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.module.ts","D:/it/pNode/solodko/frontend/src/app/components/blogs/edit-blog/edit-blog.component.html","D:/it/pNode/solodko/frontend/src/app/components/blogs/edit-blog/edit-blog.component.scss","D:/it/pNode/solodko/frontend/src/app/components/blogs/edit-blog/edit-blog.component.ts","D:/it/pNode/solodko/frontend/src/app/components/blogs/list-blogs/list-blogs.component.html","D:/it/pNode/solodko/frontend/src/app/components/blogs/list-blogs/list-blogs.component.scss","D:/it/pNode/solodko/frontend/src/app/components/blogs/list-blogs/list-blogs.component.ts"],"names":[],"mappings":"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","file":"blogs.module.chunk.js","sourcesContent":["import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport {BlogsComponent} from './blogs.component';\r\nimport {Page404Component} from '../shared/page404/page404.component';\r\nimport {AuthUserGuard} from '../../guards/auth-user.guard';\r\nimport {ListBlogsComponent} from './list-blogs/list-blogs.component';\r\nimport {EditBlogComponent} from './edit-blog/edit-blog.component';\r\n\r\nconst blogsRoutes: Routes = [\r\n  {\r\n    path: 'ch',\r\n    component: BlogsComponent,\r\n    canActivateChild: [AuthUserGuard],\r\n    children: [\r\n      {\r\n        path: 'add-blog',\r\n        component: ListBlogsComponent,\r\n        // resolve: {products: ProductResolverService}\r\n      },\r\n      {\r\n        path: 'edit-blog/:id',\r\n        component: EditBlogComponent,\r\n        // resolve: {products: ProductResolverService}\r\n      },\r\n      {\r\n        path: '**',\r\n        component: Page404Component\r\n      },\r\n    ],\r\n\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(\r\n      blogsRoutes\r\n    )],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class BlogsRoutingModule {}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs-routing.module.ts","module.exports = \"<!--<div class=\\\"row\\\">-->\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n<!--</div>-->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.component.html\n// module id = ../../../../../src/app/components/blogs/blogs.component.html\n// module chunks = blogs.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.component.scss\n// module id = ../../../../../src/app/components/blogs/blogs.component.scss\n// module chunks = blogs.module","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-blog',\r\n  templateUrl: './blogs.component.html',\r\n  styleUrls: ['./blogs.component.scss']\r\n})\r\nexport class BlogsComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {BlogsComponent} from './blogs.component';\r\nimport {BlogsRoutingModule} from './blogs-routing.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport { EditBlogComponent } from './edit-blog/edit-blog.component';\nimport { ListBlogsComponent } from './list-blogs/list-blogs.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BlogsRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    BlogsComponent,\r\n    EditBlogComponent,\r\n    ListBlogsComponent,\r\n  ],\r\n  exports: [\r\n  ]\r\n})\r\nexport class BlogsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/blogs.module.ts","module.exports = \"<!--<h2 class=\\\"page-header\\\">Блог</h2>-->\\n\\n<!--<div class=\\\"row\\\">-->\\n  <!--<div class=\\\"col\\\">-->\\n\\n    <!--<form [formGroup]=\\\"editBlogForm\\\" (ngSubmit)=\\\"onEditBlogSubmit()\\\">-->\\n      <!--<div class=\\\"form-group\\\">-->\\n        <!--<label for=\\\"title\\\">Заголовок</label>-->\\n        <!--<input formControlName=\\\"title\\\" [formGroup]=\\\"editBlogForm\\\" required-->\\n               <!--class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Заголовок\\\" [(ngModel)]=\\\"blog.title\\\">-->\\n        <!--<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"-->\\n             <!--*ngIf=\\\"(editBlogForm.controls['title'].errors?.minlength ||-->\\n              <!--editBlogForm.controls['title'].errors?.maxlength) && editBlogForm.controls['title'].touched\\\">-->\\n          <!--Довжина від 4 до 50 символів-->\\n        <!--</div>-->\\n        <!--<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"-->\\n             <!--*ngIf=\\\"editBlogForm.controls['title'].errors?.pattern && editBlogForm.controls['title'].touched\\\">-->\\n          <!--Використовуйте тільки цифри і букви-->\\n        <!--</div>-->\\n        <!--&lt;!&ndash;{{editBlogForm.controls['title'].errors | json}}&ndash;&gt;-->\\n      <!--</div>-->\\n\\n      <!--<div class=\\\"form-group\\\">-->\\n        <!--<label for=\\\"body\\\">Текст</label>-->\\n        <!--<textarea formControlName=\\\"body\\\" cols=\\\"30\\\" rows=\\\"5\\\"-->\\n                  <!--[formGroup]=\\\"editBlogForm\\\" required autocomplete=\\\"false\\\"-->\\n                  <!--class=\\\"form-control\\\" id=\\\"body\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"blog.body\\\"></textarea>-->\\n        <!--<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"-->\\n             <!--*ngIf=\\\"(editBlogForm.controls['body'].errors?.minlength ||-->\\n              <!--editBlogForm.controls['body'].errors?.maxlength) && editBlogForm.controls['body'].touched\\\">-->\\n          <!--Довжина від 4 до 1000 символів-->\\n        <!--</div>-->\\n      <!--</div>-->\\n      <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!editBlogForm.valid || processing\\\">Запостити</button>-->\\n      <!--<button [disabled]=\\\"processing\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"goBack()\\\">Повернутись</button>-->\\n\\n    <!--</form>-->\\n\\n  <!--</div>-->\\n<!--</div>-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/edit-blog/edit-blog.component.html\n// module id = ../../../../../src/app/components/blogs/edit-blog/edit-blog.component.html\n// module chunks = blogs.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/edit-blog/edit-blog.component.scss\n// module id = ../../../../../src/app/components/blogs/edit-blog/edit-blog.component.scss\n// module chunks = blogs.module","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../../services/auth.service';\nimport {IUser} from '../../../interfaces/i-user';\nimport {IBlog} from '../../../interfaces/i-blog';\nimport {BlogsService} from '../../../services/blogs.service';\n\n@Component({\n  selector: 'app-edit-blog',\n  templateUrl: './edit-blog.component.html',\n  styleUrls: ['./edit-blog.component.scss']\n})\nexport class EditBlogComponent implements OnInit {\n  editBlogForm: FormGroup;\n  loggedUser: IUser;\n  blog: IBlog;\n\n  constructor(\n    private authService: AuthService,\n    private blogsService: BlogsService,\n  ) { }\n\n  ngOnInit() {\n    this.editBlogForm = new FormGroup({\n        title: new FormControl('', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(50),\n          Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ\\' ]+'),\n        ]),\n        body: new FormControl('', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(1000),\n        ]),\n      },\n    );\n\n    this.authService.getLoggedUser()\n      .subscribe(user => this.loggedUser = user);\n\n    this.blogsService.getQueriedBlogs({'_id': '5a3e6ae5f578dd22a4eedf59'})\n      .subscribe(blog => {\n        this.blog = blog;\n        console.log(blog);\n      }\n        );\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/edit-blog/edit-blog.component.ts","module.exports = \"<h2 class=\\\"page-header\\\">Блог</h2>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col\\\">\\n\\n    <!--new blog form-->\\n    <form *ngIf=\\\"newPost\\\" [formGroup]=\\\"blogForm\\\" (ngSubmit)=\\\"onBlogSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"title\\\">Заголовок</label>\\n        <input formControlName=\\\"title\\\" [formGroup]=\\\"blogForm\\\" required\\n               class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Заголовок\\\">\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n             *ngIf=\\\"(blogForm.controls['title'].errors?.minlength ||\\n          blogForm.controls['title'].errors?.maxlength) && blogForm.controls['title'].touched\\\">\\n          Довжина від 4 до 50 символів\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n             *ngIf=\\\"blogForm.controls['title'].errors?.pattern && blogForm.controls['title'].touched\\\">\\n          Використовуйте тільки цифри і букви\\n        </div>\\n        <!--{{blogForm.controls['title'].errors | json}}-->\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"body\\\">Текст</label>\\n        <textarea formControlName=\\\"body\\\" cols=\\\"30\\\" rows=\\\"5\\\"\\n                  [formGroup]=\\\"blogForm\\\" required autocomplete=\\\"false\\\"\\n                  class=\\\"form-control\\\" id=\\\"body\\\" placeholder=\\\"\\\"></textarea>\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n             *ngIf=\\\"(blogForm.controls['body'].errors?.minlength ||\\n          blogForm.controls['body'].errors?.maxlength) && blogForm.controls['body'].touched\\\">\\n          Довжина від 4 до 1000 символів\\n        </div>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\" [disabled]=\\\"!blogForm.valid || processing\\\">Запостити</button>\\n      <button [disabled]=\\\"processing\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"goBack()\\\">Повернутись</button>\\n\\n    </form>\\n    <!--end of new blog form-->\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"!newPost\\\">\\n  <div class=\\\"col\\\">\\n\\n    <button *ngIf=\\\"loggedUser.role === 'Admin' || loggedUser.role === 'Manager'\\\"\\n            class=\\\"btn btn-success btn-sm\\\"\\n            (click)=\\\"newBlogForm()\\\">Новий пост</button>\\n    <button [disabled]=\\\"loadingBlogs\\\" class=\\\"btn btn-primary btn-info btn-sm\\\"\\n            (click)=\\\"reloadBlogs()\\\">Перезавантажити</button>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"!newPost\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"card\\\" *ngFor=\\\"let blog of blogs\\\">\\n      <div class=\\\"card-header\\\">\\n        <h4>{{blog.title}}</h4>\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">{{blog.body}}</p>\\n      </div>\\n\\n      <div class=\\\"card-footer text-muted\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 col-sm-12\\\">\\n            <button [routerLink]=\\\"['/blogs/ch/edit-blog', blog._id]\\\"\\n                    *ngIf=\\\"blog.createdBy_id === loggedUser._id ||\\n                    loggedUser.role === 'Admin' || loggedUser.role === 'Manager'\\\"\\n                    class=\\\"btn btn-primary btn-sm btn-info\\\">Редагувати</button>\\n            <button [routerLink]=\\\"['/blogs/ch/delete-blog', blog._id]\\\"\\n                    *ngIf=\\\"blog.createdBy_id === loggedUser._id ||\\n                    loggedUser.role === 'Admin' || loggedUser.role === 'Manager'\\\"\\n                    [disabled]=\\\"loadingBlogs\\\" class=\\\"btn btn-danger btn-sm\\\">Видалити</button>\\n\\n            <div class=\\\"c_dropdown\\\" *ngIf=\\\"blog.createdBy_id !== loggedUser._id\\\">\\n              <button class=\\\"btn btn-success btn-sm\\\">Лайки</button>\\n              <div class=\\\"c_dropdown-content\\\">\\n                <p><a href=\\\"#\\\">user1</a></p>\\n                <p><a href=\\\"#\\\">user2</a></p>\\n                <p><a href=\\\"#\\\">user3</a></p>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"c_dropdown\\\" *ngIf=\\\"blog.createdBy_id !== loggedUser._id\\\">\\n              <button class=\\\"btn btn-success btn-sm\\\">Нелайки</button>\\n              <div class=\\\"c_dropdown-content\\\">\\n                <p><a href=\\\"#\\\">user1</a></p>\\n                <p><a href=\\\"#\\\">user2</a></p>\\n                <p><a href=\\\"#\\\">user3</a></p>\\n              </div>\\n            </div>\\n\\n          </div>\\n          <div class=\\\"col-md-2 col-sm-6\\\">\\n            <strong>Автор: </strong>{{blog.createdBy}}\\n          </div>\\n          <div class=\\\"col-md-2 col-sm-6\\\">\\n            <strong>Дата: </strong>{{blog.createdAt | date: 'dd.MM.yyyy HH:mm'}}\\n          </div>\\n\\n          <div class=\\\"col-md-2 col-sm-6\\\" *ngIf=\\\"blog.createdBy_id === loggedUser._id\\\">\\n            <strong>Лайків </strong>{{blog.likes}}\\n          </div>\\n          <div class=\\\"col-md-2 col-sm-6\\\" *ngIf=\\\"blog.createdBy_id === loggedUser._id\\\">\\n            <strong>Нелайків </strong>{{blog.dislikes}}\\n          </div>\\n        </div>\\n        <br/>\\n\\n\\n\\n      </div>\\n\\n      <ul class=\\\"list-group\\\" *ngIf=\\\"!newPost\\\">\\n        <li class=\\\"list-group-item\\\">\\n          <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"draftComment()\\\">\\n            Коментувати\\n          </button>\\n          <br/>\\n          <!--<form>-->\\n          <!--<textarea name=\\\"comment\\\" id=\\\"\\\" cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"form-control\\\">-->\\n          <!--<button class=\\\"btn btn-sm btn-info\\\">Submit</button>-->\\n          <!--<button class=\\\"btn btn-sm btn-info\\\">Cancel</button>-->\\n          <!--</textarea>-->\\n          <!--</form>-->\\n        </li>\\n\\n\\n      </ul>\\n    </div>\\n  </div>\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/list-blogs/list-blogs.component.html\n// module id = ../../../../../src/app/components/blogs/list-blogs/list-blogs.component.html\n// module chunks = blogs.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/list-blogs/list-blogs.component.scss\n// module id = ../../../../../src/app/components/blogs/list-blogs/list-blogs.component.scss\n// module chunks = blogs.module","import { Component, OnInit } from '@angular/core';\nimport {BlogsService} from '../../../services/blogs.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {ValidateService} from '../../../services/validate.service';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../../services/auth.service';\nimport {IBlog} from '../../../interfaces/i-blog';\n\n@Component({\n  selector: 'app-list-blogs',\n  templateUrl: './list-blogs.component.html',\n  styleUrls: ['./list-blogs.component.scss']\n})\nexport class ListBlogsComponent implements OnInit {\n  messageClass;\n  message;\n  newPost = false;\n  loadingBlogs = false;\n  blogForm: FormGroup;\n  loggedUser: any;\n  processing: boolean = false;\n  blogs: IBlog[];\n\n  constructor(\n    private blogsService: BlogsService,\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService,\n    private validateService: ValidateService,\n  ) {}\n\n  ngOnInit() {\n    this.blogForm = new FormGroup({\n        title: new FormControl('', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(50),\n          Validators.pattern('[a-zA-Z0-9а-яА-ЯіїєІЇЄ\\' ]+'),\n        ]),\n        body: new FormControl('', [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(1000),\n        ]),\n      },\n    );\n\n    this.authService.getLoggedUser()\n      .subscribe(user => this.loggedUser = user);\n\n    this.getBlogs();\n  }\n\n  getBlogs() {\n    this.blogsService.getBlogs()\n      .subscribe(\n        (result) => this.blogs = result.blogs,\n        (error) => {\n          this.flashMessage.show(\n            error.message,\n            {\n              cssClass: 'alert-danger',\n              timeout: 2000\n            });\n        }\n      );\n  }\n\n  onBlogSubmit() {\n    this.processing = true;\n    this.disableBlogForm();\n    this.blogsService.addBlog({\n      title: this.blogForm.value.title,\n      body: this.blogForm.value.body,\n    })\n      .subscribe(result => {\n        this.processing = false;\n        this.enableBlogForm();\n\n        if (result.success) {\n          this.getBlogs();\n          this.newPost = false;\n          this.blogForm.reset();\n          this.flashMessage.show(\n            result.message,\n            {\n              cssClass: 'alert-success',\n              timeout: 2000\n            });\n        } else {\n          this.flashMessage.show(\n            result.message,\n            {\n              cssClass: 'alert-danger',\n              timeout: 2000\n            });\n        }\n      });\n  }\n\n  goBack() {\n    this.newPost = false;\n    this.blogForm.reset();\n    // window.location.reload();\n  }\n\n  // Enable new blog form\n  enableBlogForm() {\n    this.blogForm.get('title').enable(); // Enable title field\n    this.blogForm.get('body').enable(); // Enable body field\n  }\n\n  // Disable new blog form\n  disableBlogForm() {\n    this.blogForm.get('title').disable(); // Disable title field\n    this.blogForm.get('body').disable(); // Disable body field\n  }\n\n  newBlogForm() {\n    this.newPost = true;\n  }\n\n  reloadBlogs() {\n    // this.loadingBlogs = true;\n    this.getBlogs();\n  }\n\n  draftComment() {\n\n  }\n\n  // addBlog() {\n  //   this.blogsService.addBlog({\n  //     title: 'Заголовок',\n  //     body: 'Тіло',\n  //     createdBy: 'Автор',\n  //   })\n  //     .subscribe(\n  //       res => console.log(res)\n  //     );\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/it/pNode/solodko/frontend/src/app/components/blogs/list-blogs/list-blogs.component.ts"],"sourceRoot":"webpack:///"}